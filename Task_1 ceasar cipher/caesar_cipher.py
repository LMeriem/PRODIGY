# -*- coding: utf-8 -*-
"""Caesar Cipher.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ymTnswOt5MoudF27j_XNGQ4NlbypV9xD
"""

def caesar_cipher(text, shift, mode):
    result = ""

    # Adjust shift value for decryption
    if mode == "decrypt":
        shift = -shift

    for char in text:
        if char.isalpha():
            # Determine ASCII offset based on character case (uppercase or lowercase)
            offset = 65 if char.isupper() else 97

            # Shift character and wrap around alphabet
            new_char = chr((ord(char) - offset + shift) % 26 + offset)
            result += new_char
        else:
            # Non-alphabetical characters remain unchanged
            result += char

    return result

def main():
    print("Caesar Cipher Program")
    mode = input("Choose mode ('encrypt' or 'decrypt'): ").strip().lower()
    if mode not in ["encrypt", "decrypt"]:
        print("Invalid mode selected. Please try again.")
        return

    text = input("Enter the text: ").strip()
    try:
        shift = int(input("Enter the shift value (integer): "))
    except ValueError:
        print("Shift value must be an integer. Please try again.")
        return

    # Perform encryption or decryption
    result = caesar_cipher(text, shift, mode)
    print(f"\nResult ({mode}ed text): {result}")

if __name__ == "__main__":
    main()